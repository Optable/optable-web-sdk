name: Release new version of Optable SDK and demos
on:
  push:
    tags:
      - "v.*"

jobs:
  tests-prettier:
    uses: ./.github/workflows/reusable-lint-test.yml

  build:
    needs: [tests-prettier]
    uses: ./.github/workflows/reusable-build.yml

  deploy-sdk:
    needs: [build]
    runs-on: ubuntu-latest
    env:
        gcp-project-id: 118585658141
        service-account: gh-ci-optable-web-sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-web
          path: browser/dist

      - name: Download lib artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-web
          path: lib/dist

        # Step will fail if the version is invalid, github.ref_name is the tag name (v.*.*.*)
      - name: Patch version
        run: ./scripts/patch-version.sh "${{ github.ref_name }}"

      - name: Setup registry access
        run: |
          echo '@optable:registry=https://registry.npmjs.org/' > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Publish to NPM
        run: npm publish --access public

      - uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/${{ env.gcp-project-id }}/locations/global/workloadIdentityPools/optable-ci/providers/github-pool-provider"
          service_account: "${{ env.service-account }}@optable-platform-ci.iam.gserviceaccount.com"

      - name: Upload SDK to GCS bucket, upload new version
        uses: "google-github-actions/upload-cloud-storage@v2"
        with:
          path: "browser/dist/sdk.js"
          destination: "gs://optable-web-sdk/${{ github.ref_name }}"

      - name: Check if tag is a release (not experimental, next, rc)
        id: is-official-release
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "isLatest='true'" >> $GITHUB_OUTPUT
            else
              echo "isLatest='false'" >> $GITHUB_OUTPUT
          fi

      - name: Upload SDK to GCS bucket, override latest
        if: steps.is-official-release.outputs.isLatest == 'true'
        uses: "google-github-actions/upload-cloud-storage@v2"
        with:
          path: "browser/dist/sdk.js"
          destination: "gs://optable-web-sdk/latest"

  deploy-demo:
    needs: [deploy-sdk]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    env:
      gcp-project-id: 118585658141
      service-account: gh-ci-optable-web-sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get sdk artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-web
          path: browser/dist

      - name: Get vanilla-demo artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-demo-vanilla
          path: demos

      - name: Get react-demo artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-react-demo
          path: demos/react/dist

      - name: Get npm-demo artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-npm-demo
          path: demos/npm/dist

      - uses: "google-github-actions/auth@v2"
        id: auth
        with:
          workload_identity_provider: "projects/${{ env.gcp-project-id }}/locations/global/workloadIdentityPools/optable-ci/providers/github-pool-provider"
          service_account: "${{ env.service-account }}@optable-platform-ci.iam.gserviceaccount.com"

      - name: Build web-sdk-demos Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t us-docker.pkg.dev/optable-artifact-registry/optable/optable-web-sdk-demos:${{ github.ref_name }} \
            ./demos

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.auth_token }}

      - name: Publish web-sdk-demos to us-docker.pkg.dev
        run: docker push us-docker.pkg.dev/optable-artifact-registry/optable/optable-web-sdk-demos:${{ github.ref_name }}
